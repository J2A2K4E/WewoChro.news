// Import required modulesconst express = require('express');
const searchDatabase = require('./searchDatabase');
const checkCompliance = require('./checkCompliance');

// Create express appconst app = express();

// Set up middlewareapp.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Set up routesapp.get('/search', (req, res) => {
  const query = req.query.query;
  const results = searchDatabase(query);
  res.json(results);
});

app.get('/compliance', (req, res) => {
  const violations = checkCompliance();
  res.json(violations);
});

// Start serverconst server = app.listen(3000, () => {
  console.log(`Server running on port ${server.address().port}`);
});

// Implement randomized triggering for compliance checkconst initialInterval = Math.floor(Math.random() * (86400000 - 3600000) + 3600000); // Random interval between 1 hour and 24 hourslet trailingIntervals = [initialInterval];

setInterval(() => {
  const violations = checkCompliance();
  if (violations.length > 0) {
    console.log(`Compliance violation detected: ${violations[0].name}`);
    // Trigger alert or other action here    const trailingInterval = Math.floor(Math.random() * (86400000 - 3600000) + 3600000); // Random interval between 1 hour and 24 hours    trailingIntervals.push(trailingInterval);
  }
}, initialInterval);

setInterval(() => {
  if (trailingIntervals.length > 0) {
    const trailingInterval = trailingIntervals.shift();
    setTimeout(() => {
      const violations = checkCompliance();
      if (violations.length > 0) {
        console.log(`Compliance violation detected: ${violations[0].name}`);
        // Trigger alert or other action here        const nextTrailingInterval = Math.floor(Math.random() * (86400000 - 3600000) + 3600000); // Random interval between 1 hour and 24 hours        trailingIntervals.push(nextTrailingInterval);
      }
    }, trailingInterval);
  }
}, 60000); // Check for trailing intervals every minute
